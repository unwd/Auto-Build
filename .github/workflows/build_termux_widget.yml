name: Auto Build Termux Widget Apk
on: 
   workflow_dispatch:
   repository_dispatch:
    types: start auto build Widget
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Clone repository
      run: git clone https://github.com/termux/termux-widget termux_widget
    - name: Check version
      run: |
        remote_version=$(cat termux_widget/app/build.gradle |grep "versionName \"" |awk -F "\"" '{print $2}')
        local_version=$(cat version.json |jq -r .widget)
        echo "已编译版本--$local_version"
        echo "官方最新版本--$remote_version"
        if [ "$local_version" == "$remote_version" ];then
                printf "无最新版本!\n\n"
                exit 1;
        fi
        echo "zt=$?" >> $GITHUB_ENV
        echo "remote_version=$remote_version" >> $GITHUB_ENV
        echo "local_version=$local_version" >> $GITHUB_ENV
    - name: Build
      run: |
        printf "开始编译\n"
        cd termux_widget
        ./gradlew assembleDebug
        cp app/build/outputs/apk/debug/*debug.apk ../Termux_widget_${remote_version}.apk
        echo "编译结束"
    - name: Change local version
      run: |
        sed -i "s/.*widget.*/\"widget\":\"${remote_version}\",/g" version.json
        git config --global user.email "zfuns@qq.com"
        git config --global user.name "zfuns"
        git pull
        git add version.json
        git commit -m "update"
        git push
    - name: Upload Apk To Lzy
      if: env.zt == 0
      run: |
        ${{secrets.LZY_UPDATE}}
        up_lzy Termux_widget_*.apk
    - name: Store generated APK file
      if: env.zt == 0
      uses: actions/upload-artifact@v4
      with:
        name: termux-widget
        path: ./termux_widget/app/build/outputs/apk/debug/termux-widget_debug.apk
